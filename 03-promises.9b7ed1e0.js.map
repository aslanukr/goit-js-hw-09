{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,OAAQC,SAASC,cAAc,QAC/BC,aAAcF,SAASC,cAAc,6BACrCE,YAAaH,SAASC,cAAc,4BACpCG,cAAeJ,SAASC,cAAc,+BA4BxC,SAASI,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAnCPT,EAAKC,OAAOgB,iBAAiB,UAE7B,SAA6BC,GAC3BA,EAAMC,iBAEN,IAAK,IAAIC,EAAI,EAAGA,EAAIpB,EAAKM,cAAce,MAAOD,GAAK,EAAG,CACpD,IAAME,EAAWF,EAAI,EACfG,EAAQC,OAAOxB,EAAKI,aAAaiB,OAASrB,EAAKK,YAAYgB,MAAQD,EAEzEb,EAAce,EAAUC,GACrBE,MAAK,SAAAC,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MACjBkB,EAAA7B,GAAS8B,OAAOC,QACd,uBAAwCC,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,IAGjDsB,OAAM,SAAAL,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MAClBkB,EAAA7B,GAAS8B,OAAOI,QACd,sBAAqCF,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,IAKnDT,EAAKC,OAAOgC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  formEl: document.querySelector('form'),\n  inputDelayEl: document.querySelector('.form input[name=\"delay\"]'),\n  inputStepEl: document.querySelector('.form input[name=\"step\"]'),\n  inputAmountEl: document.querySelector('.form input[name=\"amount\"]'),\n};\n\nrefs.formEl.addEventListener('submit', handleFormSubmitBtn);\n\nfunction handleFormSubmitBtn(event) {\n  event.preventDefault();\n\n  for (let i = 0; i < refs.inputAmountEl.value; i += 1) {\n    const position = i + 1;\n    const delay = Number(refs.inputDelayEl.value) + refs.inputStepEl.value * i;\n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n\n  refs.formEl.reset();\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","formEl","document","querySelector","inputDelayEl","inputStepEl","inputAmountEl","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","i","value","position1","delay1","Number","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.9b7ed1e0.js.map"}